AWSTemplateFormatVersion: "2010-09-09"
Description: "Portal Resources Lambdas"

Parameters:
  Version:
    Type: String
    Description: The git version of this deployment
  ServiceName:
    Type: String
    Description: The name of the service
  RoleArn:
    Type: String
    Description: Arn of the execution role
  SourceBucket:
    Type: String
    Description: The bucket the code is in
  SourceKey:
    Type: String
    Description: The path to the code zip
  AlephSecurityGroups:
    Type: CommaDelimitedList
    Description: The security group(s) required for aleph
  AlephSubnets:
    Type: CommaDelimitedList
    Description: The subnet(s) required for aleph
  LogRetention:
    Type: Number
    Description: days
    Default: 7
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
  BorrowedTimeout:
    Type: Number
    Description: seconds
    MinValue: 1
    MaxValue: 300
    Default: 30
  BorrowedMemorySize:
    Type: Number
    Description: MB
    AllowedValues: [128, 192, 256, 320, 384, 448, 512, 576, 640, 704, 768, 832, 896, 960, 1024, 1088, 1152, 1216, 1280, 1344, 1408, 1472, 1536]
    Default: 128
  PendingTimeout:
    Type: Number
    Description: seconds
    MinValue: 1
    MaxValue: 300
    Default: 30
  PendingMemorySize:
    Type: Number
    Description: MB
    AllowedValues: [128, 192, 256, 320, 384, 448, 512, 576, 640, 704, 768, 832, 896, 960, 1024, 1088, 1152, 1216, 1280, 1344, 1408, 1472, 1536]
    Default: 128
  AlephQueryTimeout:
    Type: Number
    Description: seconds
    MinValue: 1
    MaxValue: 300
    Default: 30
  AlephQueryMemorySize:
    Type: Number
    Description: MB
    AllowedValues: [128, 192, 256, 320, 384, 448, 512, 576, 640, 704, 768, 832, 896, 960, 1024, 1088, 1152, 1216, 1280, 1344, 1408, 1472, 1536]
    Default: 512
  AlephTimeout:
    Type: Number
    Description: seconds
    MinValue: 1
    MaxValue: 300
    Default: 30
  AlephMemorySize:
    Type: Number
    Description: MB
    AllowedValues: [128, 192, 256, 320, 384, 448, 512, 576, 640, 704, 768, 832, 896, 960, 1024, 1088, 1152, 1216, 1280, 1344, 1408, 1472, 1536]
    Default: 512
  AlephRenewTimeout:
    Type: Number
    Description: seconds
    MinValue: 1
    MaxValue: 300
    Default: 30
  AlephRenewMemorySize:
    Type: Number
    Description: MB
    AllowedValues: [128, 192, 256, 320, 384, 448, 512, 576, 640, 704, 768, 832, 896, 960, 1024, 1088, 1152, 1216, 1280, 1344, 1408, 1472, 1536]
    Default: 256
  AlephUpdateTimeout:
    Type: Number
    Description: seconds
    MinValue: 1
    MaxValue: 300
    Default: 30
  AlephUpdateMemorySize:
    Type: Number
    Description: MB
    AllowedValues: [128, 192, 256, 320, 384, 448, 512, 576, 640, 704, 768, 832, 896, 960, 1024, 1088, 1152, 1216, 1280, 1344, 1408, 1472, 1536]
    Default: 256
  IlliadTimeout:
    Type: Number
    Description: seconds
    MinValue: 1
    MaxValue: 300
    Default: 30
  IlliadMemorySize:
    Type: Number
    Description: MB
    AllowedValues: [128, 192, 256, 320, 384, 448, 512, 576, 640, 704, 768, 832, 896, 960, 1024, 1088, 1152, 1216, 1280, 1344, 1408, 1472, 1536]
    Default: 128

Outputs:
  BorrowedArn:
    Description: Borrowed lambda arn
    Value: !GetAtt Borrowed.Arn
  BorrowedLogs:
    Value: !Sub https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logStream:group=${BorrowedLogs}

  PendingArn:
    Description: Pending lambda arn
    Value: !GetAtt Pending.Arn
  PendingLogs:
    Value: !Sub https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logStream:group=${PendingLogs}

  AlephQueryArn:
    Description: AlephQuery lambda arn
    Value: !GetAtt AlephQuery.Arn
  AlephQueryLogs:
    Value: !Sub https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logStream:group=${AlephQueryLogs}

  AlephRenewArn:
    Description: AlephRenew lambda arn
    Value: !GetAtt AlephRenew.Arn
  AlephRenewLogs:
    Value: !Sub https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logStream:group=${AlephRenewLogs}

  AlephUpdateArn:
    Description: AlephUpdate lambda arn
    Value: !GetAtt AlephUpdate.Arn
  AlephUpdateLogs:
    Value: !Sub https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logStream:group=${AlephUpdateLogs}

  AlephLogs:
    Value: !Sub https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logStream:group=${AlephLogs}

  IlliadLogs:
    Value: !Sub https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logStream:group=${IlliadLogs}

Resources:
  Borrowed:
    DependsOn:
      - Aleph
      - Illiad
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${ServiceName}-borrowed
      Description: Get borrowed resources for given netid
      Runtime: python2.7
      Timeout: !Ref BorrowedTimeout
      MemorySize: !Ref BorrowedMemorySize
      Handler: joinHandler.borrowed
      Environment:
        Variables:
          ALEPH_FUNC:
            Fn::GetAtt:
              - Aleph
              - Arn
          ILLIAD_FUNC:
            Fn::GetAtt:
              - Illiad
              - Arn
          VERSION: !Ref Version
      Role: !Ref RoleArn
      Code:
        S3Bucket: !Ref SourceBucket
        S3Key: !Ref SourceKey
  BorrowedPermission:
    DependsOn: Borrowed
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt Borrowed.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
  BorrowedLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Borrowed}
      RetentionInDays: !Ref LogRetention

  Pending:
    Type: AWS::Lambda::Function
    DependsOn:
      - Aleph
      - Illiad
    Properties:
      FunctionName: !Sub ${ServiceName}-pending
      Description: Get pending resources for given netid
      Runtime: python2.7
      Timeout: !Ref PendingTimeout
      MemorySize: !Ref PendingMemorySize
      Handler: joinHandler.pending
      Environment:
        Variables:
          ALEPH_FUNC:
            Fn::GetAtt:
              - Aleph
              - Arn
          ILLIAD_FUNC:
            Fn::GetAtt:
              - Illiad
              - Arn
          VERSION: !Ref Version
      Role: !Ref RoleArn
      Code:
        S3Bucket: !Ref SourceBucket
        S3Key: !Ref SourceKey
  PendingPermission:
    DependsOn: Pending
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt Pending.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
  PendingLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Pending}
      RetentionInDays: !Ref LogRetention

  Aleph:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${ServiceName}-aleph
      Description: Get aleph resources for given netid
      Runtime: python2.7
      Timeout: !Ref AlephTimeout
      MemorySize: !Ref AlephMemorySize
      Handler: serviceHandler.aleph
      Role: !Ref RoleArn
      Code:
        S3Bucket: !Ref SourceBucket
        S3Key: !Ref SourceKey
      VpcConfig:
        SecurityGroupIds: !Ref AlephSecurityGroups
        SubnetIds: !Ref AlephSubnets
  AlephLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Aleph}
      RetentionInDays: !Ref LogRetention

  AlephQuery:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${ServiceName}-alephQuery
      Description: Query aleph for a book
      Runtime: python2.7
      Timeout: !Ref AlephQueryTimeout
      MemorySize: !Ref AlephQueryMemorySize
      Handler: alephQuery.findItem
      Role: !Ref RoleArn
      Code:
        S3Bucket: !Ref SourceBucket
        S3Key: !Ref SourceKey
      VpcConfig:
        SecurityGroupIds: !Ref AlephSecurityGroups
        SubnetIds: !Ref AlephSubnets
      Environment:
        Variables:
          VERSION: !Ref Version
  AlephQueryPermission:
    DependsOn: AlephQuery
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt AlephQuery.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
  AlephQueryLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AlephQuery}
      RetentionInDays: !Ref LogRetention

  AlephRenew:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${ServiceName}-alephRenew
      Description: Renew aleph item
      Runtime: python2.7
      Handler: alephQuery.renewItem
      Timeout: !Ref AlephRenewTimeout
      MemorySize: !Ref AlephRenewMemorySize
      Role: !Ref RoleArn
      Code:
        S3Bucket: !Ref SourceBucket
        S3Key: !Ref SourceKey
      VpcConfig:
        SecurityGroupIds: !Ref AlephSecurityGroups
        SubnetIds: !Ref AlephSubnets
      Environment:
        Variables:
          VERSION: !Ref Version
  AlephRenewPermission:
    DependsOn: AlephRenew
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt AlephRenew.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
  AlephRenewLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AlephRenew}
      RetentionInDays: !Ref LogRetention

  AlephUpdate:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${ServiceName}-alephUpdate
      Description: Update aleph user
      Runtime: python2.7
      Handler: alephQuery.updateUser
      Timeout: !Ref AlephUpdateTimeout
      MemorySize: !Ref AlephUpdateMemorySize
      Role: !Ref RoleArn
      Code:
        S3Bucket: !Ref SourceBucket
        S3Key: !Ref SourceKey
      VpcConfig:
        SecurityGroupIds: !Ref AlephSecurityGroups
        SubnetIds: !Ref AlephSubnets
      Environment:
        Variables:
          VERSION: !Ref Version
  AlephUpdatePermission:
    DependsOn: AlephUpdate
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt AlephUpdate.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
  AlephUpdateLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AlephUpdate}
      RetentionInDays: !Ref LogRetention

  Illiad:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${ServiceName}-illiad
      Description: Get illiad resources for given netid
      Runtime: python2.7
      Handler: serviceHandler.illiad
      Timeout: !Ref IlliadTimeout
      MemorySize: !Ref IlliadMemorySize
      Role: !Ref RoleArn
      Code:
        S3Bucket: !Ref SourceBucket
        S3Key: !Ref SourceKey
  IlliadLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Illiad}
      RetentionInDays: !Ref LogRetention
