ServiceKey:
  Type: AWS::KMS::Key
  DependsOn:
    - defaultRole
  Properties:
    Description: "KMS Key used for the ${{self:service}} service"
    KeyPolicy:
      Id: ${{self:custom.serviceStage}}
      Statement:
        -
          Sid: "Enable IAM User Permissions"
          Effect: "Allow"
          Principal:
            AWS:
              Ref: "AWS::AccountId"
          Action:
            - "kms:*"
          Resource: "*"
        -
          Sid: "Allow access for Key Administrators"
          Effect: "Allow"
          Principal:
            AWS:
              Fn::Sub: "arn:aws:iam::${AWS::AccountId}:role/superAdmin"
          Action:
            - "kms:Create*"
            - "kms:Describe*"
            - "kms:Enable*"
            - "kms:List*"
            - "kms:Put*"
            - "kms:Update*"
            - "kms:Revoke*"
            - "kms:Disable*"
            - "kms:Get*"
            - "kms:Delete*"
            - "kms:TagResource"
            - "kms:UntagResource"
            - "kms:ScheduleKeyDeletion"
            - "kms:CancelKeyDeletion"
          Resource: "*"
        -
          Sid: "Allow use of the key"
          Effect: "Allow"
          Principal:
            AWS:
              Fn::Sub: "arn:aws:iam::${AWS::AccountId}:role/${{self:custom.serviceStage}}"
          Action:
            - "kms:Encrypt"
            - "kms:Decrypt"
            - "kms:ReEncrypt*"
            - "kms:GenerateDataKey*"
            - "kms:DescribeKey"
          Resource: "*"
        -
          Sid: "Allow attachment of persistent resources"
          Effect: "Allow"
          Action:
            - "kms:CreateGrant"
            - "kms:ListGrants"
            - "kms:RevokeGrant"
          Resource: "*"
          Condition:
            Bool:
              kms:GrantIsForAWSResource: "true"
ServiceKeyAlias:
  DependsOn:
    - ServiceKey
  Type: AWS::KMS::Alias
  Properties:
    AliasName: "alias/${{self:custom.serviceStage}}"
    TargetKeyId:
      Ref: ServiceKey