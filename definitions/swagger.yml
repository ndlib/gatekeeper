swagger: '2.0'
info:
  title: Portal Resources
  description: Get library resource information for a user
  version: "1.0.0"

# the domain of the service
schemes:
  - https
paths:
  /aleph/{systemId}:
    get:
      summary: Get information about an aleph item by system number
      parameters:
        - in: path
          name: systemId
          type: integer
          required: true
          description: The system number
      responses:
        200:
          description: Aleph data
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
          schema:
            $ref: '#/definitions/AlephInfo'
        404:
          description: The item was not found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /aleph:
    get:
      parameters:
      - name: "type"
        in: "query"
        required: true
        type: "string"
        description: "The type of information to get (borrowed, pending, user)"
        enum: ['pending', 'borrowed', 'user']
      responses:
        "200":
          description: Get personal Aleph info
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
          schema:
            $ref: '#/definitions/PendList'
        "401":
          description: Unauthorized - most often because of invalid token
        "404":
          description: The netid was not found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
      - jwt: []
  /illiad:
    get:
      parameters:
      - name: "type"
        in: "query"
        required: true
        type: "string"
        description: "The type of information to get (borrowed, pending)"
        enum: ['pending', 'borrowed']
      responses:
        "200":
          description: Get personal Illiad info
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
          schema:
            $ref: '#/definitions/PendList'
        "401":
          description: Unauthorized - most often because of invalid token
        "404":
          description: The netid was not found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
      - jwt: []
  /primo:
     get:
       parameters:
        - name: "type"
          in: "query"
          required: true
          type: "string"
          description: "The type of information to get (favorites)"
          enum: ['favorites']
        - name: "userId"
          in: "query"
          required: true
          type: "string"
          description: "User's alephId"
       responses:
         "200":
           description: Get personal Primo info
           headers:
             Access-Control-Allow-Origin:
               type: "string"
             Access-Control-Allow-Methods:
               type: "string"
             Access-Control-Allow-Headers:
               type: "string"
           schema:
             $ref: '#/definitions/PendList'
         "401":
           description: Unauthorized - most often because of invalid token
         "404":
           description: The netid was not found
         default:
           description: Unexpected error
           schema:
             $ref: '#/definitions/Error'
       security:
       - jwt: []
### NOTE: We are not testing /aleph/renew endpoint because its a POST request that needs items checked Out
### TODO: Ensure there is unit testing coverage
# /aleph/renew:
#   post:
#     consumes:
#     - "application/json"
#     produces:
#     - "application/json"
#     parameters:
#     - name: "barcode"
#       in: "header"
#       required: true
#       type: "string"
#       description: "The barcode of the item to renew"
#     - name: "aleph-id"
#       in: "header"
#       required: true
#       type: "string"
#       description: "The alephId of the user doing the renewal"
#     responses:
#       '200':
#         description: 'Item successfully renewed'
#       '500':
#         description: 'Item was not renewed'

### NOTE: We are not testing /aleph/update endpoint because our testing netIds
### t_heslib[01..05] do not have valid alpeh IDs
### ToDo: Ensure there is unit testing coverage
# /aleph/update:
#   post:
#     consumes:
#     - "application/json"
#     produces:
#     - "application/json"
#     parameters:
#     - name: "library"
#       in: "header"
#       required: true
#       type: "string"
#       description: "The library id to set as home library"
#     - name: "aleph-id"
#       in: "header"
#       required: true
#       type: "string"
#       description: "The alephId of the user to update"
#     responses:
#       '200':
#         description: 'User successfully updated'
#       '500':
#         description: 'Failure'
securityDefinitions:
  jwt:
    type: "apiKey"
    name: "Authorization"
    in: "header"

definitions:
  AlephInfo:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      purl:
        type: string
  Item:
    type: object
    properties:
      title:
        type: string
  PendList:
    type: object
    properties:
      user:
        type: string
      pending:
        type: array
        items:
          $ref: '#/definitions/Item'
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
