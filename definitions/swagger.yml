# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Portal Resources
  description: Get library resource information for a user
  version: "1.0.0"

# the domain of the service
host: fwyleg0kcg.execute-api.us-east-1.amazonaws.com
schemes:
  - https
basePath: /dev/items
paths:
  /borrowed:
    get:
      summary: Get all borrowed resources for the user
      parameters:
        - name: Authroization
          in: header
          description: The JWT token containing the user's netid
          required: true
          type: string
      responses:
        200:
          description: The Checked out resource information
          schema:
            $ref: '#/definitions/OutList'
        401:
          description: Unauthorized - most often because of invalid token
        404:
          description: The netid was not found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /pending:
    get:
      summary: Get all pending resources for the user
      description: |
        Log into CAS and return a JWT token containing user information
      parameters:
        - name: Authroization
          in: header
          description: The JWT token containing the user's netid
          required: true
          type: string
      responses:
        200:
          description: The Pending resource information
          schema:
            $ref: '#/definitions/PendList'
        401:
          description: Unauthorized - most often because of invalid token
        404:
          description: The netid was not found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Item:
    type: object
    properties:
      title:
        type: string
  OutList:
    type: object
    properties:
      user:
        type: string
      checkedOut:
        type: array
        items:
          $ref: '#/definitions/Item'
  PendList:
    type: object
    properties:
      user:
        type: string
      pending:
        type: array
        items:
          $ref: '#/definitions/Item'
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
